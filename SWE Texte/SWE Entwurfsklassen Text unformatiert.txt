Software-Architektur

Für die Implementierung des Systems wird eine Entwurfsarchitektur nach der Schichtenvariante gewählt. Im Modell Umfrageklassen(Entwurf) ist diese Architektur mit ihren Klassen aufgebaut.
Die Entwurfsklassen ähneln neben den Manager-, Service- und Fassadeklassen den Analyseklassen. Daher ist über diese bereits eine Datenstruktur über die einzubringende Datenbank gegeben.

Die Schichtenarchitektur teilt sich auf in jeweils vier Schichten. Ganz oben sind die GUI und die Anwendungslogik, welche die HTML-Seiten und die zugehörige Fassade enthalten. Dabei wird durch die Fassade eine Sammlung aller vom System bereitgestellten Funktionen gezeigt. Diese Methoden werden, je nach Situation (beispielsweise wenn ein Benutzer eingeloggt ist) über Links und Buttons in den HTML-Seiten anwählbar sein. Somit kann gesagt sein, dass die Fassade in Einklang mit den HTML-Seiten die eigentliche GUI für den Anwender darstellen werden.
Die Anwendungslogik bildet wiederum insgesamt eine andere Sicht. Sie setzt sich zusammen aus der Fassade und den Services zu den einzelnen Objekten. Die Fassade stellt wie bereits erwähnt eine Sammlung aller für den Nutzer möglichen Funktionen dar. Diese werden in den Services auf ihre jeweiligen Bereiche aufgeteilt. In den Services werden zu den jeweiligen Objekten sämtliche für den Benutzer nützliche Funktionen verständlich dargelegt. Dabei stellen die Services nur eine Schnittstelle zu den Anwendungsdaten auf Seiten der Anwendungslogik dar. Befehle und Parameter werden von hier an die Anwendungsdatenschicht übergeben und von den Managern ausgeführt.

In der Anwendungsdatenschicht werden durch die Manager über Methoden Veränderungen an der internen Datenstruktur vorgenommen. Hier werden durch Methoden Klassenobjekte (beispielsweise Benutzer) erstellt, verändert, gelöscht und mit anderen Objekten in Verbindung gebracht. Die Verbindungen zwischen den Objekten wird hier ebenfalls dargestellt. In der Realisation wird dies in der Datenbank über Schlüsselverbindungen dargestellt sein.
Alle Manager greifen auf die vier Methoden des DB-Interfaces zu, welche eine Bearbeitung der Objekte nach dem CRUD(Create, Read, Update, Destroy)-Prinzip ermöglichen. Das DBInterface bildet allein die tiefste Schicht des Systems. Dieser Bereich, genannt Persistenz, stellt die grundlegenden Funktionen zur Bearbeitung der Daten auf der Datenbank dar.


Feinentwurf:

Die Schichtenarchitektur allein reicht jedoch nicht aus, um alle Funktionen des Systems ordentlich strukturiert abbilden zu können. Eine Aufteilung der Funktionen in bestimmte Bereiche ist nötig. In unserem System teilen sich alle Funktionen, die über die Fassade erreichbar sind, in drei unterschiedliche Managements auf. Diese sind das User-, Survey- und Evaluation-Management. In jedem Management wird nach der oben beschriebenen Vorgehensweise vom Service eine Funktion angeboten, welche einen Aufruf einer Methode im darunter gelegenen Manager zur Folge hat. Dieser startet darauf die nötigen Schritte um die Funktion durchzuführen. Beispielsweise wird im User-Management im UserService über die Funktion „registrieren(Benutzerdaten ud)“ mit den übergebenen Benutzerdaten die Methode „createUser(Benutzerdaten ud)“ aufgerufen und erstellt nach CRUD ein neues User-Objekt mit einer eigenen ID auf der Datenbank. Darauf wird ein return mit dem Wert „true“ ausgegeben, welcher an den Service weitergereicht wird. Dieser reicht den Rückgabewert ebenfalls weiter an die Fassade, sei es in Form eines Wertes wie „true“ oder durch einen Text, welcher in einem Feld der Fassade ausgegeben wird (z.B. „Benutzer wurde erfolgreich erstellt“).
Im Survey-Management wird nach dem selben Verfahren wie schon beim User-Management gearbeitet. Jedoch werden hier nicht nur Umfrage- sondern auch Frage-Objekte verwaltet. Das CRUD-Prinzip findet auch hier durch die Zuordnung des Managers an das DBInterface wieder Verwendung.
Trotzdem das dritte Management als Evaluation-Management bezeichnet wird, werden hier nicht nur Auswertungen zu den übergebenen Umfragen getätigt. Damit diese überhaupt möglich sind, muss an den Umfragen teilgenommen werden. Im EvaluationService wird hier daher die Funktion „anUmfrageTeilnehmen(Umfrage2 umfrage)“ angeboten, welche ein TeilnahmeObjekt erzeugt und gewählte oder geschriebene Antworten mit dieser verknüpft. Aus diesem Grund ist das Evaluation-Management nicht nur mit lesend auf der Datenbank tätig, sondern genießt alle Möglichkeiten des CRUD-Prinzips durch das DBInterface. Sind eine oder mehrere Teilnahmen zu einer Umfrage erstellt kann die Auswertung über bestimmte Funktionen im EvaluationService beginnen. Je nach Art der Frage in der Umfrage werden verschiedene Auswertungsmethoden im Evaluation-Manager aufgerufen (bsp. „findTextAnswert...“ bzw. „countChosenAnswers...“)